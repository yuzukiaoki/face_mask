 # Write results
                for *xyxy, conf, cls in det:
                    if save_txt:  # Write to file
                        xywh = (xyxy2xywh(torch.tensor(xyxy).view(1, 4)) / gn).view(-1).tolist()  # normalized xywh
                        with open(txt_path + '.txt', 'a') as f:
                            f.write(('%g ' * 5 + '\n') % (cls, *xywh))  # label format
                    
                    if save_img or view_img:  # Add bbox to image
                        label = '%s %.2f' % (names[int(cls)], conf)
                        plot_one_box(xyxy, im0, label=label, color=colors[int(cls)], line_thickness=1)
                    
                    if save_obj:
                        for k in range(len(det)):
                            x,y,w,h=int(xyxy[0]), int(xyxy[1]), int(xyxy[2] - xyxy[0]), int(xyxy[3] - xyxy[1])                   
                            img_ = im0.astype(np.uint8)
                            crop_img=img_[y:y+ h, x:x + w]                          
                                
                            #!!rescale image !!!
                            filename=label+ '{:}.jpg'.format(+1)
                            filepath=os.path.join(r'./inference/detection/', filename)
                            cv2.imwrite(filepath, crop_img) 
                            
            else:
                print("There is no detected object")
                continue